% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.SubTree.R
\name{fit.SubTree}
\alias{fit.SubTree}
\title{Fitting subsequent maximum spanning trees to a multivariate inverted-Pareto data set}
\usage{
fit.SubTree(
  data,
  MST,
  VineTree,
  copfamset,
  tree,
  si,
  selectioncrit,
  progress,
  effsampsize,
  tau_threshold,
  weights = NA,
  se = FALSE,
  cores = 1
)
}
\arguments{
\item{data}{A \eqn{n\times d} inverted-Pareto sample data set.}

\item{MST}{A list of maximum spanning trees.}

\item{VineTree}{A list of fitted vine tree structures and fitted models.}

\item{copfamset}{Numeric; indicates the class of pair-copula models users consider.}

\item{tree}{Numeric value of tree levels.}

\item{si}{Numeric; a tuning parameter for mBIC (\eqn{\si_0=0.9}; default).}

\item{selectioncrit}{Character string indicating the model selection criteria, e.g. 'AIC'.}

\item{progress}{Logical; whether the vine tree selection is reported.}

\item{effsampsize}{Numeric; the specified effective sample size for the independence copula (\eqn{n_{D_e}}<10; default).}

\item{tau_threshold}{Numeric; the specified Kendall's tau value for the independence copula (\eqn{\hat{\tau}_e}<0.05; default).}

\item{weights}{Logical; whether the weights are applied to missing values.}

\item{se}{Logical; whether standard errors for ML estimators are reported.}

\item{cores}{Numeric; indicates the number of cores for parallel computing (optional).}
}
\value{
A nested list of MST including the maximum spanning tree and fitted vine models.
}
\description{
Fits all previous maximum spanning trees to a multivariate inverted-Pareto data set.
The function uses the recursive relationship for conditional distributions.
The properly selected arguments for conditional pair-copulas are passed to the function 'copSelect'.
After selecting the class of pair-copula models with the lowest AIC, stores the output of fitted models in the list of MST, including parameter estimates, model classesl (numeric) in the list of MST.
After that, the function stores properly defined pseudo-copula observations through functions 'repseudo.SecTree' for the second tree and 'pseudo.Subtree' for subsequent trees in the list of MST.
}
